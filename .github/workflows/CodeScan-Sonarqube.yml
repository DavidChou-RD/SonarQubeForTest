name: Build
on:
  push:
    branches:
      - main # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        shell: powershell
        run: |
          echo "REPO_NAME=${{ github.event.repository.name }}"
      - name: Comment Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
            message: |
              Hello world ! :wave:

          # curl -u admin:twport1048 http://sonarqube.gorilla-technology.com:9000/api/projects/create?name=${{github.repository}}&project=${{github.repository}}&visibility=public
          # curl -H 'Accept:application/json' -H 'Authorization:Basic YWRtaW46dHdwb3J0MTA0OA==' http://sonarqube.gorilla-technology.com:9000/api/user_tokens/search
          # curl -u admin:twport1048 http://sonarqube.gorilla-technology.com:9000/api/user_tokens/generate?name=${{github.repository}}&projectKey=${{github.repository}}
          # .\.sonar\scanner\dotnet-sonarscanner begin /k:"DavidChou-RD_SonarQubeForTest_AYSZSjK2CZUxBBAzZ0MR" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          # dotnet build
          # .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"